############################################
# SQLassie database firewall configuration #
############################################

# The host to connect to, where the MySQL installation is running.
#
# This parameter is an error if you are connecting using domain sockets.
#
# Default: (none)

#host=127.0.0.1


# Defines how to connect to the MySQL server.
#
# You can either connect using TCP sockets by specifying the 'connect-port'
# option, or by using Unix domain sockets by specifying the 'connect-socket'
# option.
#
# Default: connect-socket=/var/run/mysqld/mysqld.sock

connect-socket=/var/run/mysqld/mysqld.sock
#connect-port=3306


# Defines how to listen for connections.
#
# You can either listen using TCP sockets by specifying the 'listen-port'
# option, or by using Unix domain sockets by specifying the 'listen-socket'
# option.
#
# Most applications that connect using domain sockets will directly look in
# the MySQL configuration for where to connect and are not otherwise
# configurable, so you will probably have to use ports (TCP sockets).
#
# Default: listen-port=3307

listen-port=3307
#listen-socket=


# Verbosity level.
#
# Controls the level of debugging information displayed by SQLassie. To disable
# all non-fatal messages, specify the 'quiet' option. Valid values are:
# (none) : print warnings and up
# v      : print information messages up
# vv     : print debug messages and up
# vvv    : print trace statements and up
# vvvv   : print all statements
#
# Default: (none)


# User name and password to access the mysql.users table in MySQL.
#
# Login information for SQLassie to access login permissions when SQLassie
# starts up.
#
# Because SQLassie is a proxy, it acts as a tunnel between clients that
# connect to the database server. Most database servers allow you to restrict
# which users can log in from specific locations, but this extra security is
# lost when all connections are routed through a proxy. To help make up for
# this, SQLassie can load connection permissions from the MySQL server when it
# starts and can then accept and reject clients based on those rules. Please
# note that MySQL permissions are very fine-grained, allowing you to grant
# specific permissions for commands on particular tables based on where a
# user is connecting from, while SQLassie will only accept and reject
# clients. Once a client connects to SQLassie, it will appear to the database
# server that the client is connecting directly from the machine where
# SQLassie is running.
#
# Default: (none)

user=sqlassie
#password=


# Whitelisted query files.
#
# You can either whitelist queries that fail to parse, or queries that parse
# but are misidentified as attacks. The file should hold one query per line.
# Once you add a query to the file, you will have to restart SQLassie.
#
# Default: (none)

#parser-query-whitelist-file=
#blocked-query-whitelist-file=


# Names of sensitive fields and tables.
#
# SQLassie considers certain fields and tables to be particularly sensitive,
# such as the 'user' table and the 'password' field. If your databases have
# special names for these fields or tables (for example, 'passphrase' for the
# password field) you can set them here.
#
# You can either have SQLassie search for a substring, or for more advanced
# usage, you can specify a Perl regular expression. Note that the substring
# does a case sensitive search, while the regular expression is case
# insensitive. If you need case insensitivity, use the regular expression.
# The regular expression matches any substring.
#
# Defaults:
# password-substring=password
# password-regex=
# user-substring=user
# user-regex=

password-substring=password
user-substring=user
