net
{
	propagationenginegenerator1791944048146838126L = "edu.ucla.belief.approx.BeliefPropagationSettings@1fd84ec";
	jenginegenerator6060830225489488864L = "edu.ucla.belief.inference.JoinTreeSettings@7ee9eb";
	recoveryenginegenerator6944530267470113528l = "edu.ucla.util.SettingsImpl@121beab";
	node_size = (130.0 55.0);
}

node MySqlComments
{
	states = ("mySqlComments" "none" );
	position = (226 90);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable6";
	label = "MySqlComments";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node MySqlStringConcat
{
	states = ("mySqlStringConcat" "none" );
	position = (212 14);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable0";
	label = "MySqlStringConcat";
	DSLxSUBMODEL = "Root Submodel";
	diagnosistype = "AUXILIARY";
}
node DataAccess
{
	states = ("access" "benign" );
	position = (-795 113);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable2";
	label = "DataAccess";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node GlobalVariables
{
	states = ("globals" "none" );
	position = (-140 -188);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable0";
	label = "GlobalVariables";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node Select
{
	states = ("select" "other" );
	position = (-592 243);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable0";
	label = "Select";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node StringManipulation
{
	states = ("none" "one" "two" "three" "more" );
	position = (-69 -113);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable18";
	label = "StringManipulation";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node OrStmts
{
	states = ("ors" "none" );
	position = (-565 -239);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable14";
	label = "OrStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node ConditionalModification
{
	states = ("modification" "benign" );
	position = (-705 -20);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable3";
	label = "ConditionalModification";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node IfStmts
{
	states = ("if" "none" );
	position = (-531 4);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable5";
	label = "IfStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node CommentedQuotes
{
	states = ("commented" "benign" );
	position = (-515 -156);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable10";
	label = "CommentedQuotes";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node Fingerprinting
{
	states = ("fingerprinting" "benign" );
	position = (-127 254);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable6";
	label = "Fingerprinting";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node BruteForce
{
	states = ("bruteForce" "benign" );
	position = (-269 -33);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable4";
	label = "BruteForce";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node CommentedConditionals
{
	states = ("commented" "benign" );
	position = (-900 -157);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable6";
	label = "CommentedConditionals";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node ConditionalStmts
{
	states = ("conditional" "benign" );
	position = (-460 108);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable4";
	label = "ConditionalStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node HexStrings
{
	states = ("hexStrings" "none" );
	position = (-210 -111);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable18";
	label = "HexStrings";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node UnionStmts
{
	states = ("unions" "none" );
	position = (-871 -19);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable13";
	label = "UnionStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node MySqlVersionComments
{
	states = ("mySqlVersionComments" "none" );
	position = (145 -46);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable7";
	label = "MySqlVersionComments";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node DetectionEvasion
{
	states = ("evasion" "benign" );
	position = (-140 68);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable1";
	label = "DetectionEvasion";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node FingerprintingStmts
{
	states = ("fingerprinting" "none" );
	position = (238 229);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable0";
	label = "FingerprintingStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node UserStmts
{
	states = ("userStmts" "none" );
	position = (230 158);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable1";
	label = "UserStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node AlwaysTrueConditional
{
	states = ("true" "none" );
	position = (-830 -234);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable23";
	label = "AlwaysTrueConditional";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node BenchmarkStmts
{
	states = ("benchmark" "none" );
	position = (-420 -45);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable3";
	label = "BenchmarkStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node StringStmts
{
	states = ("strings" "none" );
	position = (-10 -40);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable20";
	label = "StringStmts";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
node OrAlwaysTrue
{
	states = ("orAlwaysTrue" "benign" );
	position = (-705 -159);
	excludepolicy = "include whole CPT";
	ismapvariable = "false";
	ID = "variable12";
	label = "OrAlwaysTrue";
	DSLxSUBMODEL = "Root Submodel";
	DSLxEXTRA_DEFINITIONxDIAGNOSIS_TYPE = "AUXILIARY";
	diagnosistype = "AUXILIARY";
}
potential ( MySqlComments | Fingerprinting )
{
	data = ((	0.1	0.9	)
		(	0.0010	0.999	));
}
potential ( MySqlStringConcat | Fingerprinting )
{
	data = ((	0.15	0.85	)
		(	1.0E-4	0.9999	));
}
potential ( DataAccess | Fingerprinting Select )
{
	data = (((	0.8	0.2	)
		(	0.0010	0.999	))
		((	0.05	0.95	)
		(	0.0010	0.999	)));
}
potential ( GlobalVariables | DetectionEvasion )
{
	data = ((	0.1	0.9	)
		(	0.01	0.99	));
}
potential ( Select | )
{
	data = (	0.5	0.5	);
}
potential ( StringManipulation | DetectionEvasion )
{
	data = ((	0.30000000000000004	0.15000000000000002	0.2	0.2	0.15000000000000002	)
		(	0.835	0.1	0.05	0.01	0.0050	));
}
potential ( OrStmts | ConditionalModification OrAlwaysTrue )
{
	data = (((	1.0	0.0	)
		(	0.35	0.65	))
		((	1.0	0.0	)
		(	0.15	0.85	)));
}
potential ( ConditionalModification | DataAccess )
{
	data = ((	0.9	0.1	)
		(	0.01	0.99	));
}
potential ( IfStmts | ConditionalStmts )
{
	data = ((	0.85	0.15	)
		(	0.2	0.8	));
}
potential ( CommentedQuotes | ConditionalModification )
{
	data = ((	0.2	0.8	)
		(	0.0025	0.9975	));
}
potential ( Fingerprinting | )
{
	data = (	0.05	0.95	);
}
potential ( BruteForce | DetectionEvasion ConditionalStmts )
{
	data = (((	0.8	0.2	)
		(	0.2	0.8	))
		((	0.01	0.99	)
		(	5.0E-4	0.9995	)));
}
potential ( CommentedConditionals | ConditionalModification )
{
	data = ((	0.3	0.7	)
		(	5.0E-4	0.9995	));
}
potential ( ConditionalStmts | Fingerprinting Select )
{
	data = (((	0.6	0.4	)
		(	0.6	0.4	))
		((	0.05	0.95	)
		(	0.0010	0.999	)));
}
potential ( HexStrings | DetectionEvasion )
{
	data = ((	0.8	0.2	)
		(	0.0010	0.999	));
}
potential ( UnionStmts | DataAccess )
{
	data = ((	0.7	0.3	)
		(	0.05	0.95	));
}
potential ( MySqlVersionComments | Fingerprinting )
{
	data = ((	0.25	0.75	)
		(	0.05	0.95	));
}
potential ( DetectionEvasion | Fingerprinting )
{
	data = ((	0.6	0.4	)
		(	0.01	0.99	));
}
potential ( FingerprintingStmts | Fingerprinting )
{
	data = ((	0.25	0.75	)
		(	0.0050	0.995	));
}
potential ( UserStmts | Fingerprinting )
{
	data = ((	0.2	0.8	)
		(	0.0010	0.999	));
}
potential ( AlwaysTrueConditional | ConditionalModification OrAlwaysTrue )
{
	data = (((	1.0	0.0	)
		(	0.2	0.8	))
		((	1.0	0.0	)
		(	0.8	0.2	)));
}
potential ( BenchmarkStmts | ConditionalStmts Fingerprinting )
{
	data = (((	0.25	0.75	)
		(	0.01	0.99	))
		((	0.5	0.5	)
		(	0.0010	0.999	)));
}
potential ( StringStmts | DetectionEvasion )
{
	data = ((	0.7	0.3	)
		(	0.01	0.99	));
}
potential ( OrAlwaysTrue | ConditionalModification )
{
	data = ((	0.6	0.4	)
		(	0.0010	0.999	));
}
